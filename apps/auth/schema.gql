# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Access {
  businessId: String
  dateCreated: DateTime
  dateUpdated: DateTime
  id: ID
  permissionType: PermissionType!
  permissions: [Permission!]
  resourceId: String
  role: String
  user: User
  userId: String
}

type AuthResponse {
  accessToken: String
  isNewUser: Boolean
  message: String
  refreshToken: String
  success: Boolean!
  user: User
}

type BenefitInfo {
  descriptions: [LocalizedData!]!
  tags: [String!]
}

input BenefitInput {
  descriptions: [LocalizedDataInput!]!
  tags: [String!]
}

input CreateAccessInput {
  permissions: [CreatePermissionInput!]!
  resourceId: String
  role: String!
}

input CreatePermissionInput {
  action: String!
  effect: String!
  groups: [PermissionGroupInput!]
  resourceTarget: String!
  resourceType: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum LanguageKey {
  AMHARIC
  ENGLISH
  OROMIC
}

type LocalizedData {
  """the name of the language, ex. english, amharic"""
  key: LanguageKey!
  value: String!
}

input LocalizedDataInput {
  """the name of the language, ex. english, amharic"""
  key: LanguageKey!
  value: String!
}

type Mutation {
  addAuthorizationAccess(accesses: [CreateAccessInput!]!, user: String!): [Access!]!
  addPermissionToUserAccess(access: String!, permissions: [CreatePermissionInput!]!, user: String!): [Permission!]!
  createUserAccountUsingEmailPassword(signup: SignupInput!): AuthResponse!
  logout: Boolean!
  removeAccessFromUser(accesses: [String!]!, user: String!): Boolean!
  removePermissionFromUserAccess(access: String!, permissions: [String!]!, user: String!): Boolean!
  signInWithEmailAndPassword(email: String!, password: String!): AuthResponse!
  signInWithPhoneNumber(phone: String!): AuthResponse!
  updateProfileInfo(user: UpdateUserInput!): Boolean!
}

input NameTypeInput {
  key: String!
  value: String!
}

type Permission {
  action: String!
  effect: String!
  groups: [PermissionGroup!]
  id: ID
  resourceTarget: String!
  resourceType: String!
  userGenerated: Boolean
}

type PermissionGroup {
  id: String!
  key: String!
  name: [LocalizedData!]!
}

input PermissionGroupInput {
  key: String!
  name: [NameTypeInput!]!
}

enum PermissionType {
  PLATFORM_PERMISSION
  PLATFORM_SERVICE_CUSTOMIZATION_PERMISSION
}

input PlatformServiceSubscriptionInput {
  createdAt: DateTime
  endDate: DateTime!
  isTrialPeriod: Boolean
  selectedCustomizationId: [String!]!
  serviceId: ID!
  serviceName: String!
  startDate: DateTime!
  updatedAt: DateTime!
}

type PlatfromServiceSubscription {
  createdAt: DateTime
  endDate: DateTime!
  isTrialPeriod: Boolean
  selectedCustomizationId: [String!]!
  serviceId: ID!
  serviceName: String!
  startDate: DateTime!
  updatedAt: DateTime!
}

type Query {
  check: String!
  me: UserResponse!
  placeholder: User!
  refreshToken: AuthResponse!
}

input SignupInput {
  email: String!
  firstName: String!
  lastName: String
  password: String
  phoneNumber: String!
  profileImageUrl: String
}

type Subscription {
  createdAt: DateTime
  endDate: DateTime!
  id: ID
  isActive: Boolean
  isTrialPeriod: Boolean!

  """owner can be business id, service id, product id"""
  owner: String
  plan: SubscriptionPlan
  platformServices: [PlatfromServiceSubscription!]
  startDate: DateTime!
  subscriptioinPlanId: String
  type: SubscriptionType!
  updatedAt: DateTime!
}

input SubscriptionInput {
  createdAt: DateTime
  endDate: DateTime!
  id: ID
  isActive: Boolean
  isTrialPeriod: Boolean!

  """owner can be business id, service id, product id"""
  owner: String
  plan: SubscriptionPlanInput
  platformServices: [PlatformServiceSubscriptionInput!]
  startDate: DateTime!
  subscriptioinPlanId: String
  type: SubscriptionType!
  updatedAt: DateTime!
}

type SubscriptionPlan {
  benefits: [BenefitInfo!]
  category: [String!]
  createdAt: DateTime
  description: [LocalizedData!]
  duration: Int
  id: ID
  isActive: Boolean
  name: [LocalizedData!]
  owner: String
  price: Float
  subscriptions: [Subscription!]
  trialPeriod: Int

  """PLATFORM, BUSEINSS, PRODUCT, SERVICE"""
  type: SubscriptionType
  updatedAt: DateTime
}

input SubscriptionPlanInput {
  benefits: [BenefitInput!]
  category: [String!]
  createdAt: DateTime
  description: [LocalizedDataInput!]
  duration: Int
  id: ID
  isActive: Boolean
  name: [LocalizedDataInput!]
  owner: String
  price: Float
  subscriptions: [SubscriptionInput!]
  trialPeriod: Int

  """PLATFORM, BUSEINSS, PRODUCT, SERVICE"""
  type: SubscriptionType
  updatedAt: DateTime
}

enum SubscriptionType {
  BUSINESS
  PLATFORM
  PRODUCT
}

input UpdateUserInput {
  accountStatus: String
  email: String
  firstName: String
  lastName: String
  password: String
  phoneNumber: String
  profileImageUrl: String
}

type User {
  accessIds: [String!]
  accesses: [Access!]
  accountStatus: String
  email: String
  emailVerified: Boolean
  firstName: String
  id: ID
  isEmailPlaceholder: Boolean
  isUsernamePlaceholder: Boolean
  lastName: String
  password: String
  phoneNumber: String
  phoneVerified: Boolean
  profileImageUrl: String
  refreshToken: String
  username: String
}

type UserResponse {
  accesses: [Access!]
  user: User
}