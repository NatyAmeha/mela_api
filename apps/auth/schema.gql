# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Access {
  dateCreated: DateTime
  dateUpdated: DateTime
  id: ID
  name: [LocalizedData!]
  owner: String!
  ownerType: AccessOwnerType!
  permissionType: PermissionType!
  permissions: [Permission!]
  resourceId: String
  role: String
}

enum AccessOwnerType {
  BUSINESS
  PLATFORM
  USER
}

type AuthResponse {
  accessToken: String
  code: Int
  isNewUser: Boolean
  message: String
  refreshToken: String
  success: Boolean!
  user: User
}

input CreatePermissionInput {
  action: String!
  effect: String!
  groups: [PermissionGroupInput!]
  resourceTarget: String!
  resourceType: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum LanguageKey {
  AMHARIC
  ENGLISH
  OROMIC
}

type LocalizedData {
  """the name of the language, ex. english, amharic"""
  key: LanguageKey!
  value: String!
}

input LocalizedDataInput {
  """the name of the language, ex. english, amharic"""
  key: LanguageKey!
  value: String!
}

type Mutation {
  addPermissionToUserAccess(access: String!, permissions: [CreatePermissionInput!]!, user: String!): [Permission!]!
  createUserAccountUsingEmailPassword(signup: SignupInput!): AuthResponse!
  logout: Boolean!
  removePermissionFromUserAccess(access: String!, permissions: [String!]!, user: String!): Boolean!
  signInWithEmailAndPassword(email: String!, password: String!): AuthResponse!
  signInWithPhoneNumber(phone: String!): AuthResponse!
  updateProfileInfo(user: UpdateUserInput!): Boolean!
}

input NameTypeInput {
  key: String!
  value: String!
}

type Permission {
  action: String!
  effect: String!
  groups: [PermissionGroup!]
  id: ID
  name: [LocalizedData!]!
  resourceTarget: String!
  resourceType: String!
  userGenerated: Boolean
}

type PermissionGroup {
  id: String!
  key: String!
  name: [LocalizedData!]!
}

input PermissionGroupInput {
  key: String!
  name: [NameTypeInput!]!
}

enum PermissionType {
  PLATFORM_PERMISSION
  PLATFORM_SERVICE_CUSTOMIZATION_PERMISSION
}

type Query {
  check: String!
  me: UserResponse!
  placeholder: User!
  refreshToken: AuthResponse!
}

input SignupInput {
  email: String!
  firstName: String!
  lastName: String
  password: String
  phoneNumber: String!
  profileImageUrl: String
}

input UpdateUserInput {
  accountStatus: String
  email: String
  firstName: String
  lastName: String
  password: String
  phoneNumber: String
  profileImageUrl: String
}

type User {
  accessIds: [String!]
  accesses: [Access!]
  accountStatus: String
  email: String
  emailVerified: Boolean
  firstName: String
  id: ID
  isEmailPlaceholder: Boolean
  isUsernamePlaceholder: Boolean
  lastName: String
  password: String
  phoneNumber: String
  phoneVerified: Boolean
  profileImageUrl: String
  refreshToken: String
  username: String
}

type UserResponse {
  accesses: [Access!]
  user: User
}