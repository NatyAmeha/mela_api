# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BenefitInfo {
  descriptions: [LocalizedData!]!
  tags: [String!]
}

input BenefitInput {
  descriptions: [LocalizedDataInput!]!
  tags: [String!]
}

input CreatePlatformServiceSubscriptionInput {
  selectedCustomizationId: [String!]!
  serviceId: String!
  serviceName: String!
}

input CreateSubscriptionInput {
  """owner can be business id, service id, product id"""
  owner: String
  selectedPlatformServices: [CreatePlatformServiceSubscriptionInput!]
  subscriptioinPlanId: String
  type: SubscriptionType!
}

input CreateSubscriptionPlanInput {
  benefits: [BenefitInput!]!
  category: [String!]!
  description: [LocalizedDataInput!]
  duration: Float!
  name: [LocalizedDataInput!]!
  owner: String
  price: Float!
  trialPeriod: Float!

  """PLATFORM, BUSEINSS, PRODUCT, SERVICE"""
  type: SubscriptionType!
}

type Customization {
  additionalPrice: Float
  default: Boolean
  id: ID
  name: [LocalizedData!]!
  value: String!
}

type CustomizationCategory {
  customizations: [Customization!]!
  description: [LocalizedData!]
  id: ID
  name: [LocalizedData!]!
  selectionRequired: Boolean
  selectionType: SelectionType
}

input CustomizationCategoryInput {
  customizations: [CustomizationInput!]!
  description: [LocalizedDataInput!]
  id: ID
  name: [LocalizedDataInput!]!
  selectionRequired: Boolean
  selectionType: SelectionType
}

input CustomizationInput {
  additionalPrice: Float
  default: Boolean
  id: ID
  name: [LocalizedDataInput!]!
  value: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum LanguageKey {
  AMHARIC
  ENGLISH
  OROMIC
}

type LocalizedData {
  """the name of the language, ex. english, amharic"""
  key: LanguageKey!
  value: String!
}

input LocalizedDataInput {
  """the name of the language, ex. english, amharic"""
  key: LanguageKey!
  value: String!
}

type Mutation {
  addPlatformServiceToSubscription(platformServiceInfo: [CreatePlatformServiceSubscriptionInput!]!, subscriptionId: String!): SubscriptionResponse!
  changeSubscriptionStatus(status: Boolean!, subscription: String!): Boolean!
  createBusinessSubscriptionPlan(plan: CreateSubscriptionPlanInput!): SubscriptionPlan!
  createPlatformService(serviceInfo: PlatformServiceInput!): PlatformService!
  createPlatformSubscriptionPlan(plan: CreateSubscriptionPlanInput!): SubscriptionPlan!
  deleteSubscriptionPlan(id: String!): SubscriptionResponse!
  subscribeToPlan(info: CreateSubscriptionInput!): SubscriptionResponse!
  subscribeToPlatformServices(input: CreateSubscriptionInput!): SubscriptionResponse!
  updateSubscriptionPlan(data: UpdateSubscriptionPlanInput!, id: String!): SubscriptionResponse!
}

type Permission {
  action: String!
  effect: String!
  groups: [PermissionGroup!]
  id: ID
  name: [LocalizedData!]!
  resourceTarget: String!
  resourceType: String!
  userGenerated: Boolean
}

type PermissionGroup {
  id: String!
  key: String!
  name: [LocalizedData!]!
}

type PlatformService {
  basePrice: Float!
  customizationCategories: [CustomizationCategory!]
  description: [LocalizedData!]
  duration: Int
  features: [LocalizedData!]
  id: ID
  image: String
  name: [LocalizedData!]!
  relatedServices: [PlatformService!]
  relatedServicesId: [String!]
  trialPeriod: Int
}

input PlatformServiceInput {
  basePrice: Float!
  customizationCategories: [CustomizationCategoryInput!]
  description: [LocalizedDataInput!]
  duration: Int = 90
  features: [LocalizedDataInput!]
  id: ID
  image: String
  name: [LocalizedDataInput!]!
  relatedServices: [PlatformServiceInput!]
  relatedServicesId: [String!]
  trialPeriod: Int
}

input PlatformServiceSubscriptionInput {
  createdAt: DateTime
  endDate: DateTime!
  isTrialPeriod: Boolean
  selectedCustomizationId: [String!]!
  serviceId: ID!
  serviceName: String!
  startDate: DateTime!
  updatedAt: DateTime!
}

type PlatfromServiceSubscription {
  createdAt: DateTime
  endDate: DateTime!
  isTrialPeriod: Boolean
  selectedCustomizationId: [String!]!
  serviceId: ID!
  serviceName: String!
  startDate: DateTime!
  updatedAt: DateTime!
}

type Query {
  getBusienssSubscriptionPlans(owner: String, type: SubscriptionType): [SubscriptionPlan!]!
  getPlatformServices: [PlatformService!]!
  getSubscriptionPlans(owner: String, type: SubscriptionType): [SubscriptionPlan!]!
}

enum SelectionType {
  MULTI_SELECTION
  SINGLE_SELECTION
}

type Subscription {
  createdAt: DateTime
  endDate: DateTime!
  id: ID
  isActive: Boolean
  isTrialPeriod: Boolean!

  """owner can be business id, service id, product id"""
  owner: String
  plan: SubscriptionPlan
  platformServices: [PlatfromServiceSubscription!]
  startDate: DateTime!
  subscriptioinPlanId: String
  type: SubscriptionType!
  updatedAt: DateTime!
}

input SubscriptionInput {
  createdAt: DateTime
  endDate: DateTime!
  id: ID
  isActive: Boolean
  isTrialPeriod: Boolean!

  """owner can be business id, service id, product id"""
  owner: String
  plan: SubscriptionPlanInput
  platformServices: [PlatformServiceSubscriptionInput!]
  startDate: DateTime!
  subscriptioinPlanId: String
  type: SubscriptionType!
  updatedAt: DateTime!
}

type SubscriptionPlan {
  benefits: [BenefitInfo!]
  category: [String!]
  createdAt: DateTime
  description: [LocalizedData!]
  duration: Int
  id: ID
  isActive: Boolean
  name: [LocalizedData!]
  owner: String
  price: Float
  subscriptions: [Subscription!]
  trialPeriod: Int

  """PLATFORM, BUSEINSS, PRODUCT, SERVICE"""
  type: SubscriptionType
  updatedAt: DateTime
}

input SubscriptionPlanInput {
  benefits: [BenefitInput!]
  category: [String!]
  createdAt: DateTime
  description: [LocalizedDataInput!]
  duration: Int
  id: ID
  isActive: Boolean
  name: [LocalizedDataInput!]
  owner: String
  price: Float
  subscriptions: [SubscriptionInput!]
  trialPeriod: Int

  """PLATFORM, BUSEINSS, PRODUCT, SERVICE"""
  type: SubscriptionType
  updatedAt: DateTime
}

type SubscriptionResponse {
  addedPlatformServices: [PlatfromServiceSubscription!]
  code: Int

  """subscription info created"""
  createdSubscription: Subscription
  deletedSubscritpions: [Subscription!]

  """existing subscription available for requested by planId and owner"""
  existingActiveSubscriptions: [Subscription!]
  existingPlatformService: [PlatfromServiceSubscription!]
  message: String

  """Subscription plan info that is subscribed"""
  plan: SubscriptionPlan
  platformServicehavingFreeTrial: [String!]
  success: Boolean!
}

enum SubscriptionType {
  BUSINESS
  PLATFORM
  PRODUCT
}

input UpdateSubscriptionPlanInput {
  benefits: [BenefitInput!]
  category: [String!]
  description: [LocalizedDataInput!]
  duration: Int
  name: [LocalizedDataInput!]
  owner: String
  price: Float
  trialPeriod: Int

  """PLATFORM, BUSEINSS, PRODUCT, SERVICE"""
  type: SubscriptionType
}