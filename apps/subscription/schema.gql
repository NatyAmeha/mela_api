# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Access {
  dateCreated: DateTime
  dateUpdated: DateTime
  id: ID
  name: [LocalizedField!]
  owner: String!
  ownerType: AccessOwnerType!
  permissionType: PermissionType!
  permissions: [Permission!]
  resourceId: String
  role: String
}

enum AccessOwnerType {
  BUSINESS
  PLATFORM
  USER
}

"""The account type"""
enum AccountType {
  ADMIN
  SUPERADMIN
  USER
}

type Benefit {
  discounts: [Discount!]
  id: ID!
  name: [LocalizedField!]!
  perkType: String
}

type BenefitInfo {
  descriptions: [LocalizedField!]!
  tags: [String!]
}

input BenefitInfoInput {
  descriptions: [LocalizedFieldInput!]!
  tags: [String!]
}

input BenefitInput {
  name: [LocalizedFieldInput!]!
  perkType: MembershipPerkType
}

input CreateMembershipInput {
  benefits: [BenefitInput!]!
  category: [String!]
  description: [LocalizedFieldInput!]
  duration: Int!
  isActive: Boolean = true
  name: [LocalizedFieldInput!]!
  price: [PriceInput!]!
  type: MembershipType!
}

input CreatePlatformServiceInput {
  basePrice: Float!
  customizationCategories: [CustomizationCategoryInput!]
  description: [LocalizedFieldInput!]
  features: [LocalizedFieldInput!]
  name: [LocalizedFieldInput!]!
  subscriptionRenewalInfo: [SubscriptionRenewalInfoInput!]!
  type: PlatformServiceType!
}

input CreatePlatformSubscriptionInput {
  owner: String!
  selectedPlatformServices: [SelectedPlatformServiceForSubscription!]
}

input CreateSubscriptionPlanInput {
  benefits: [BenefitInfoInput!]!
  category: [String!]!
  description: [LocalizedFieldInput!]
  duration: Float!
  name: [LocalizedFieldInput!]!
  owner: String
  price: Float!
  trialPeriod: Float!

  """PLATFORM, BUSEINSS, PRODUCT, SERVICE"""
  type: SubscriptionType!
}

enum CurrencyKey {
  ETB
  USD
}

type Customization {
  actionIdentifier: String!
  additionalPrice: Float
  default: Boolean
  id: ID
  name: [LocalizedField!]!
  value: String!
}

type CustomizationCategory {
  customizations: [Customization!]!
  description: [LocalizedField!]
  id: ID
  name: [LocalizedField!]!
  selectionRequired: Boolean
  selectionType: SelectionType
}

input CustomizationCategoryInput {
  customizations: [CustomizationInput!]!
  description: [LocalizedFieldInput!]
  name: [LocalizedFieldInput!]!
  selectionRequired: Boolean
  selectionType: SelectionType
}

type CustomizationInfo {
  action: String!
  customizationId: String!
  id: ID
}

input CustomizationInfoInput {
  action: String!
  customizationId: String!
}

input CustomizationInput {
  actionIdentifier: String!
  additionalPrice: Float
  default: Boolean
  name: [LocalizedFieldInput!]!
  value: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Discount {
  condition: String!
  conditionValue: Float
  endDate: DateTime
  id: String
  name: [LocalizedField!]
  startDate: DateTime
  type: DiscountType!
  value: Float!
}

enum DiscountType {
  AMOUNT
  PERCENTAGE
}

type FavoriteBusinessInfo {
  businessId: String!
  businessName: [LocalizedField!]!
  id: ID!
  image: String
}

type Gallery {
  """The cover image of the gallery"""
  coverImage: String
  id: ID

  """The images in the gallery"""
  images: [GalleryData!]

  """The logo image of the gallery"""
  logoImage: String

  """The videos in the gallery"""
  videos: [GalleryData!]
}

type GalleryData {
  featured: Boolean
  url: ID!
}

type Group {
  default: Boolean!
  id: ID!
  members: [GroupMember!]!
  membership: Membership
  membershipId: String
  name: [LocalizedField!]!
}

type GroupMember {
  activeSubscription: Subscription
  activeSubscriptionId: String
  dateJoined: DateTime!
  memberStatus: String!
  paymentMethod: PaymentMethod
  user: User!
  userId: String!
}

enum LanguageKey {
  AMHARIC
  ENGLISH
  OROMIC
}

type LocalizedField {
  """the name of the language, ex. english, amharic"""
  key: LanguageKey!
  value: String!
}

input LocalizedFieldInput {
  """the name of the language, ex. english, amharic"""
  key: LanguageKey!
  value: String!
}

type Membership {
  activeSubscription: Subscription!
  allMembers: [GroupMember!]!
  benefits: [Benefit!]!
  category: [String!]
  createdAt: DateTime
  currentUserSubscription: Subscription
  description: [LocalizedField!]
  duration: Int!
  groups: [Group!]
  groupsId: [String!]!
  id: ID!
  isActive: Boolean!
  membersProductIds: [String!]
  name: [LocalizedField!]!
  owner: String!
  price: [Price!]!
  subscriptions: [Subscription!]
  subscriptionsId: [String!]
  trialPeriod: Int
  type: String!
  updatedAt: DateTime
}

enum MembershipPerkType {
  DISCOUNT
  DISCOUNT_ON_MEMBERS_PRODUCT
  FREE_DELIVERY
  POINTS
}

type MembershipProduct {
  branchIds: [String!]
  businessId: String!
  callToAction: String
  canOrderOnline: Boolean!
  category: [String!]!
  gallery: Gallery!
  id: String!
  isActive: Boolean!
  loyaltyPoint: Int!
  mainProduct: Boolean
  name: [LocalizedField!]!
  reviewTopics: [String!]
  tag: [String!]
  type: String!
  variantsId: [String!]
}

type MembershipResponse {
  code: Int
  currentUserSubscription: Subscription
  membership: Membership
  memberships: [Membership!]
  message: String
  products: [MembershipProduct!]
  success: Boolean!
}

enum MembershipType {
  BUSINESS
}

type Mutation {
  approveMembershipRequest(businessId: String!, membersId: [String!]!, membershipId: String!): MembershipResponse!
  assignProductsToMembershipPlan(businessId: String!, membershipId: String!, productIds: [String!]!): MembershipResponse!
  changeSubscriptionStatus(status: Boolean!, subscription: String!): Boolean!
  createBusinessSubscriptionPlan(plan: CreateSubscriptionPlanInput!): SubscriptionPlan!
  createMembershipPlan(businessId: String!, input: CreateMembershipInput!): MembershipResponse!
  createPlatformService(serviceInfo: CreatePlatformServiceInput!): PlatformServiceResponse!
  createPlatformSubscriptionPlan(plan: CreateSubscriptionPlanInput!): SubscriptionPlan!
  deleteSubscriptionPlan(id: String!): SubscriptionResponse!
  joinMemership(membershipId: String!, paymentMethod: PaymentMethodInput!): MembershipResponse!
  renewBusienssPlatformSubscription(id: String!, subscriptionUpdateInfo: SubscriptionUpgradeInput!): SubscriptionResponse!
  subscribeBusinessToPlatformServices(
    """id of the business"""
    businessId: String!
    input: CreatePlatformSubscriptionInput!
  ): SubscriptionResponse!
  updateMembershipInfo(businessId: String!, input: UpdateMembershipInput!, membershipId: String!): MembershipResponse!
  updateSubscriptionPlan(data: UpdateSubscriptionPlanInput!, id: String!): SubscriptionResponse!
}

type PaymentMethod {
  amount: Price!
  name: [LocalizedField!]!
  receiptImages: [String!]!
}

input PaymentMethodInput {
  amount: PriceInput!
  name: [LocalizedFieldInput!]!
  receiptImages: [String!]!
}

type Permission {
  action: String!
  effect: String!
  groups: [PermissionGroup!]
  id: ID
  name: [LocalizedField!]
  resourcTargetName: String
  resourceTarget: String!
  resourceType: String!
  userGenerated: Boolean
}

type PermissionGroup {
  id: String!
  key: String!
  name: [LocalizedField!]!
}

enum PermissionType {
  BUSINESS_MANAGEMENT_PERMISSION
  PLATFORM_SERVICE_ACCESS_PERMISSION
  PLATFORM_SERVICE_CUSTOMIZATION_PERMISSION
}

type PlatformService {
  basePrice: Float!
  customizationCategories: [CustomizationCategory!]
  description: [LocalizedField!]
  features: [LocalizedField!]
  id: ID
  image: String
  name: [LocalizedField!]!
  relatedServices: [PlatformService!]
  relatedServicesId: [String!]
  subscriptionRenewalInfo: [SubscriptionRenewalInfo!]!
  type: PlatformServiceType!
}

type PlatformServiceResponse {
  code: Int
  message: String
  platformServices: [PlatformService!]!
  service: PlatformService!
  success: Boolean!
}

enum PlatformServiceType {
  INVENTORY
  MEMBERSHIP
  ONLINE_STORE
  POINT_OF_SALE
  SUBSCRIPTION
}

type PlatfromServiceSubscription {
  createdAt: DateTime
  endDate: DateTime!
  id: ID
  isTrialPeriod: Boolean
  selectedCustomizationInfo: [CustomizationInfo!]!
  serviceId: ID!
  serviceName: String!
  startDate: DateTime!
  updatedAt: DateTime!
}

type Price {
  amount: Float!
  currency: String!
  id: ID
}

input PriceInput {
  amount: Float!
  currency: CurrencyKey! = ETB
}

type Query {
  getBusienssSubscriptionPlans(owner: String, type: SubscriptionType): [SubscriptionPlan!]!
  getBusinessMembershipPlans(businessId: String!): MembershipResponse!
  getMembershipDetails(membershipId: String!): MembershipResponse!
  getPlatformServices: PlatformServiceResponse!
  getPriceInfoToUpgradeSubscription(
    """Subscritpion id"""
    id: String!
    subscriptionUpdateInfo: SubscriptionUpgradeInput!
  ): SubscriptionUpgradeResponse!
  getSubscriptionPlans(owner: String, type: SubscriptionType): [SubscriptionPlan!]!
  getUserMemberships: MembershipResponse!
}

input SelectedPlatformServiceForSubscription {
  selectedCustomizationInfo: [CustomizationInfoInput!]!
  selectedRenewalId: String!
  serviceId: String!
  serviceName: String!
}

enum SelectionType {
  MULTI_SELECTION
  SINGLE_SELECTION
}

type Subscription {
  amountPaid: Float
  createdAt: DateTime
  endDate: DateTime!
  id: ID
  isActive: Boolean
  isTrialPeriod: Boolean!

  """
  owner of the subscription. it will be a business id for platform service subscription and user id for business subscription
  """
  owner: String
  plan: SubscriptionPlan
  platformServices: [PlatfromServiceSubscription!]
  startDate: DateTime!
  subscribedTo: String
  subscriptioinPlanId: String
  type: SubscriptionType!
  updatedAt: DateTime!
}

type SubscriptionPlan {
  benefits: [BenefitInfo!]
  category: [String!]
  createdAt: DateTime
  description: [LocalizedField!]
  duration: Int
  id: ID
  isActive: Boolean
  name: [LocalizedField!]
  owner: String
  price: Float
  subscriptions: [Subscription!]
  trialPeriod: Int

  """PLATFORM, BUSEINSS, PRODUCT, SERVICE"""
  type: SubscriptionType
  updatedAt: DateTime
}

type SubscriptionRenewalInfo {
  discountAmount: Int!
  duration: Int!
  id: ID
  name: [LocalizedField!]!
  trialPeriod: Int!
}

input SubscriptionRenewalInfoInput {
  discountAmount: Int! = 0
  duration: Int! = 90
  name: [LocalizedFieldInput!]!
  trialPeriod: Int! = 90
}

type SubscriptionResponse {
  addedPlatformServices: [PlatfromServiceSubscription!]
  code: Int
  deletedSubscritpions: [Subscription!]

  """existing subscription available for requested by planId and owner"""
  existingActiveSubscriptions: [Subscription!]
  existingPlatformService: [PlatfromServiceSubscription!]
  message: String

  """Subscription plan info that is subscribed"""
  plan: SubscriptionPlan
  platformServicehavingFreeTrial: [String!]
  platformServices: [PlatformService!]

  """subscription info created"""
  subscription: Subscription

  """subscriptions"""
  subscriptions: [Subscription!]
  success: Boolean!
}

enum SubscriptionType {
  BUSINESS
  MEMBERSHIP
  PLATFORM
  PRODUCT
}

input SubscriptionUpgradeInput {
  addedServices: [UpdatePlatformSubscriptionInput!]
  businessId: String!
  removedServices: [UpdatePlatformSubscriptionInput!]
}

type SubscriptionUpgradeResponse {
  addedPlatformServices: [PlatformService!]
  code: Int
  message: String
  owner: String!
  price: Float!
  removedPlatformServices: [PlatformService!]
  success: Boolean!
}

input UpdateMembershipInput {
  benefits: [BenefitInput!]
  category: [String!]
  description: [LocalizedFieldInput!]
  duration: Int
  isActive: Boolean = true
  name: [LocalizedFieldInput!]
  price: [PriceInput!]
}

input UpdatePlatformSubscriptionInput {
  selectedCustomizationInfo: [CustomizationInfoInput!]
  serviceId: String!
}

input UpdateSubscriptionPlanInput {
  benefits: [BenefitInfoInput!]
  category: [String!]
  description: [LocalizedFieldInput!]
  duration: Float
  name: [LocalizedFieldInput!]
  owner: String
  price: Float
  trialPeriod: Float

  """PLATFORM, BUSEINSS, PRODUCT, SERVICE"""
  type: SubscriptionType
}

type User {
  accessIds: [String!]
  accesses: [Access!]
  accountStatus: String
  accountType: AccountType!
  email: String
  emailVerified: Boolean
  favoriteBusinesses: [FavoriteBusinessInfo!]
  firstName: String
  id: ID
  isEmailPlaceholder: Boolean
  isUsernamePlaceholder: Boolean
  lastName: String
  password: String
  phoneNumber: String
  phoneVerified: Boolean
  profileImageUrl: String
  refreshToken: String
  username: String
}